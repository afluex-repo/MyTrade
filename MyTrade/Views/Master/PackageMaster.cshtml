@model MyTrade.Models.Master

@{
    ViewBag.Title = "PackageMaster";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("PackageMaster", "Master", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="container">
        <div class="row layout-top-spacing">
            <div class="col-lg-12 col-12 layout-spacing">
                <div class="statbox widget box box-shadow">
                    <div class="widget-header">
                        <div class="row">
                            <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                                <h4>Package Master</h4>
                                <span class="text-danger">
                                    @TempData["Package"]
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="widget-content widget-content-area">
                        <div class="row mb-2">
                            <div class="col-md-3">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Package Type<span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(m => m.PackageTypeId, new SelectList(ViewBag.ddlPackageType, "Value", "Text"), new { @class = "form-control",@onchange="return ChangePackagetype();" })
                                    </div>
                                </div>
                            </div>
                        
                            <div class="col-md-3">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Product Name <span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.ProductName, new { @placeholder = "Product Name", @class = "form-control" })
                                        @Html.HiddenFor(m => m.Packageid)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Product Price <span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.ProductPrice, new { @placeholder = "Product Price", @class = "form-control", @onkeypress = "return isNumberKey(event)", onchange="return bindbvprice();" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">BV <span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.BV, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                    </div>
                                </div>
                            </div>
                            @*<div class="col-md-3">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">IGST <span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.IGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                    </div>
                                </div>
                            </div>*@
                            

                        </div>
                        <div class="row mb-2">
                            <div class="col-md-3" style="display:none" id="divfromamount">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">From Amount<span style="color: red">*</span></label>
                                    <div class="col-sm-9" >
                                        @Html.TextBoxFor(m => m.FromAmount, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3" style="display:none" id="divtoamount">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">To Amount<span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.ToAmount, new { @class = "form-control", @onkeypress = "return isNumberKey(event)",@onchange="return checkAmount();" })
                                    </div>
                                </div>
                            </div>
                            @*<div class="col-md-3">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Binary Perc(%)<span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.BinaryPercent, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                    </div>
                                </div>
                            </div>*@
                            @*<div class="col-md-3">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">CGST <span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.CGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">SGST <span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.SGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Binary Perc(%)<span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.BinaryPercent, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                    </div>
                                </div>
                            </div>*@
                            
                            <div class="col-md-6">

                                @if (Model.Packageid == null)
                                {
                                    <input type="submit" id="btnSaveProduct" class="btn btn-success" name="btnSaveProduct" value="Save" onclick="return saveProduct();" />
                                }
                                else
                                {
                                    @*<input type="submit" id="btnUpdateProduct" class="btn btn-success pull-right" name="btnUpdateProduct" value="Update" onclick="return updateProduct();" />*@
                                    <a href="#" type="submit" id="btnUpdateProduct" class="btn btn-success" name="btnUpdateProduct" value="Update" onclick="return updateProduct();" >Update</a>
                                }

                                <a class="btn btn-primary" href="/Master/PackageList">Back To List</a>


                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" type="text/javascript"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>
<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="Stylesheet" type="text/css" />
<script>
    $(document).ready(function () {
        var packagetype = $("#PackageTypeId").val();
        if (packagetype == 2) {
            $("#divfromamount").show();
            $("#divtoamount").show();
        }
        else {
            $("#divfromamount").hide();
            $("#divtoamount").hide();
        }
    });
    function validate() {
        $(".errortext").removeClass("errortext"); 
        if ($('#PackageTypeId').val() == '0') {
            $("#PackageTypeId").addClass('errortext');
            $('#PackageTypeId').focus();
            return false;
        }
    
        if ($('#ProductName').val() == '') {
            $("#ProductName").addClass('errortext');
            $('#ProductName').focus();
            return false;
        }
        if ($('#ProductPrice').val() == '') {
            $("#ProductPrice").addClass('errortext');
            $('#ProductPrice').focus();
            return false;
        }
        debugger
        if ($('#PackageTypeId').val() == '2') {
            if ($('#FromAmount').val() == '') {
                $("#FromAmount").addClass('errortext');
                $('#FromAmount').focus();
                return false;
            }
            if ($('#ToAmount').val() == '') {
                $("#ToAmount").addClass('errortext');
                $('#ToAmount').focus();
                return false;
            }
        }
        //if ($('#IGST').val() == '') {
        //    $("#IGST").addClass('errortext');
        //    $('#IGST').focus();
        //    return false;
        //}
        //if ($('#CGST').val() == '') {
        //    $("#CGST").addClass('errortext');
        //    $('#CGST').focus();
        //    return false;
        //}
        //if ($('#SGST').val() == '') {
        //    $("#SGST").addClass('errortext');
        //    $('#SGST').focus();
        //    return false;
        //}
        //if ($('#BinaryPercent').val() == '') {
        //    $("#BinaryPercent").addClass('errortext');
        //    $('#BinaryPercent').focus();
        //    return false;
        //}


    }
    function bindbvprice()
    {
        var productprice = $('#ProductPrice').val();
        if ($('#ProductPrice').val() == '') {
            $('#BV').val('');
        }
        else
        {
            $('#BV').val(productprice);
            
        }
    }
    function checkAmount() {
        var fromamount = $("#FromAmount").val();
        var toamount = $("#ToAmount").val();
        if(Number(fromamount)>Number(toamount))
        {
            alert('From Amount can not greater than To Amount')
            $("#ToAmount").val('');
            $("#ToAmount").addClass('errortext');
            $('#ToAmount').focus();
          
        }
    }
    function ChangePackagetype()
    {
        var packagetype = $("#PackageTypeId").val();
        if(packagetype==2)
        {
            $("#divfromamount").show();
            $("#divtoamount").show();
         
        }
        else {
            $("#divfromamount").hide();
            $("#divtoamount").hide();
        }
    }
    function isNumberKey(evt) {

        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function saveProduct() {
        $(".errortext").removeClass("errortext");
        if ($('#PackageTypeId').val() == '0') {
            $("#PackageTypeId").addClass('errortext');
            $('#PackageTypeId').focus();
            return false;
        }
        if ($('#ProductName').val() == '') {
            $("#ProductName").addClass('errortext');
            $('#ProductName').focus();
            return false;
        }
        if ($('#ProductPrice').val() == '') {
            $("#ProductPrice").addClass('errortext');
            $('#ProductPrice').focus();
            return false;
        }
        //if ($('#IGST').val() == '') {
        //    $("#IGST").addClass('errortext');
        //    $('#IGST').focus();
        //    return false;
        //}
        //if ($('#CGST').val() == '') {
        //    $("#CGST").addClass('errortext');
        //    $('#CGST').focus();
        //    return false;
        //}
        //if ($('#SGST').val() == '') {
        //    $("#SGST").addClass('errortext');
        //    $('#SGST').focus();
        //    return false;
        //}
        //if ($('#BinaryPercent').val() == '') {
        //    $("#BinaryPercent").addClass('errortext');
        //    $('#BinaryPercent').focus();
        //    return false;
        //}
        if ($('#BV').val() == '') {
            $("#BV").addClass('errortext');
            $('#BV').focus();
            return false;
        }
        if ($('#PackageTypeId').val() == '2') {
            if ($('#FromAmount').val() == '') {
                $("#FromAmount").addClass('errortext');
                $('#FromAmount').focus();
                return false;
            }
            if ($('#ToAmount').val() == '') {
                $("#ToAmount").addClass('errortext');
                $('#ToAmount').focus();
                return false;
            }
        }
        $.ajax({
            url: "/Master/SaveProduct",
            Type: "Get",
            DataType: "JSON",
            data: { PackageType: $("#PackageTypeId").val(), ProductName: $("#ProductName").val(), ProductPrice: $("#ProductPrice").val(), IGST: $("#IGST").val(), CGST: $("#CGST").val(), SGST: $("#SGST").val(), BinaryPercent: $("#BinaryPercent").val(), DirectPercent: $("#DirectPercent").val(), ROIPercent: $("#ROIPercent").val(), BV: $("#BV").val(), FromAmount: $("#FromAmount").val(), ToAmount: $("#ToAmount").val() },
            success: function (data) {
                alert(data.Result);
                window.location.href = '@Url.Action("PackageList", "Master")';

            }

        });
    }

    function updateProduct() {
        $(".errortext").removeClass("errortext");
        if ($('#PackageTypeId').val() == '0') {
            $("#PackageTypeId").addClass('errortext');
            $('#PackageTypeId').focus();
            return false;
        }
        if ($('#ProductName').val() == '') {
            $("#ProductName").addClass('errortext');
            $('#ProductName').focus();
            return false;
        }
        if ($('#ProductPrice').val() == '') {
            $("#ProductPrice").addClass('errortext');
            $('#ProductPrice').focus();
            return false;
        }
        //if ($('#IGST').val() == '') {
        //    $("#IGST").addClass('errortext');
        //    $('#IGST').focus();
        //    return false;
        //}
        //if ($('#CGST').val() == '') {
        //    $("#CGST").addClass('errortext');
        //    $('#CGST').focus();
        //    return false;
        //}
        //if ($('#SGST').val() == '') {
        //    $("#SGST").addClass('errortext');
        //    $('#SGST').focus();
        //    return false;
        //}
        //if ($('#BinaryPercent').val() == '') {
        //    $("#BinaryPercent").addClass('errortext');
        //    $('#BinaryPercent').focus();
        //    return false;
        //}
        //if ($('#DirectPercent').val() == '') {
        //    $("#DirectPercent").addClass('errortext');
        //    $('#DirectPercent').focus();
        //    return false;
        //}
        //if ($('#ROIPercent').val() == '') {
        //    $("#ROIPercent").addClass('errortext');
        //    $('#ROIPercent').focus();
        //    return false;
        //}
        if ($('#BV').val() == '') {
            $("#BV").addClass('errortext');
            $('#BV').focus();
            return false;
        }
        if ($('#PackageTypeId').val() == '2') {
            if ($('#FromAmount').val() == '') {
                $("#FromAmount").addClass('errortext');
                $('#FromAmount').focus();
                return false;
            }
            if ($('#ToAmount').val() == '') {
                $("#ToAmount").addClass('errortext');
                $('#ToAmount').focus();
                return false;
            }
        }
        $.ajax({
            url: "/Master/UpdateProduct",
            Type: "Get",
            DataType: "JSON",
            data: { PackageType: $("#PackageTypeId").val(), Packageid: $("#Packageid").val(), ProductName: $("#ProductName").val(), ProductPrice: $("#ProductPrice").val(), IGST: $("#IGST").val(), CGST: $("#CGST").val(), SGST: $("#SGST").val(), BinaryPercent: $("#BinaryPercent").val(), DirectPercent: $("#DirectPercent").val(), ROIPercent: $("#ROIPercent").val(), BV: $("#BV").val(), FromAmount: $("#FromAmount").val(), ToAmount: $("#ToAmount").val() },
            success: function (data) {
                alert(data.Result);
                window.location.href = '@Url.Action("PackageList", "Master")';

            }

        });

    }

</script>
