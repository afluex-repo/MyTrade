@model MyTrade.Models.Account
@{
    ViewBag.Title = "TopUp";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

@using (Html.BeginForm("TopUp", "User", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="container">
        <div class="row layout-top-spacing">
            <div class="col-lg-12 col-12 layout-spacing">
                <div class="statbox widget box box-shadow">
                    <div class="widget-header">
                        <div class="row">
                            <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                                <h4>Top-Up</h4>
                                @*<span class="text-danger">
                                        @TempData["TopUp"]
                                    </span>*@
                            </div>
                        </div>
                    </div>
                    <div class="widget-content widget-content-area">
                        <div class="row mb-4">
                            <div class="col-md-4">
                                <label style="color:red">Wallet Balance: @ViewBag.WalletBalance</label>
                            </div>
                            @if (ViewBag.WalletBalance == "0")
                            {
                                <a class="btn btn-primary" href="/Wallet/AddWallet">Add Fund</a>
                            }
                        </div>
                        <div class="row mb-4">
                            <div class="col-md-4">
                                <label for="LoginId">LoginId</label>
                                @Html.TextBoxFor(m => m.LoginId, new { @class = "form-control", @placeholder = "Login Id", @disabled = "disabled" })
                                <p class="text-success" id="spName"></p>
                            </div>
                            <div class="col-md-4">
                                <label for="Package">Package <span style="color:red">*</span></label>
                                @Html.DropDownListFor(m => m.PackageId, new SelectList(ViewBag.ddlProduct, "Value", "Text"), new { @class = "form-control" })
                                <p class="text-success" id="spName"></p>
                            </div>
                            <div class="col-md-4">
                                <input type="hidden" id="WalletAmount" value="@ViewBag.WalletBalance" />
                                <label for="Amount">Amount <span style="color:red">*</span></label>
                                @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @placeholder = "Amount", @onkeypress = "return isNumberKey(event);", @onchange = "return CheckAmount();" })
                                <span style="color:red">Min  : @ViewBag.FromAmount </span><span style="color:red;padding-left:50px"> Max : @ViewBag.ToAmount </span><span style="color:red;padding-left:50px"> In Multiple Of : @ViewBag.InMultipleOf</span>
                            </div>
                        </div>
                        <div class="row mb-4">
                            <div class="col-md-4">
                                <label for="Amount">
                                    Payment Type
                                </label><span style="color: red">*</span>
                                @Html.DropDownListFor(m => m.PaymentType, new SelectList(ViewBag.ddlpaymentType, "Value", "Text"), new { @class = "form-control", @onchange = "getpaymentTypedetails();" })
                            </div>
                            <div class="col-md-4" id="paymentmode" style="display: none">
                                <label for="Mode">Mode<span style="color:red">*</span></label>
                                @Html.DropDownListFor(m => m.PaymentMode, new SelectList(ViewBag.ddlpaymentmode, "Value", "Text"), new { @class = "form-control", @onchange = "return CheckPayMode();" })
                            </div>
                        </div>
                        <div class="row mb-4" style="display:none" id="divPaymentMode">
                            <div class="col-md-3" id="divQr" style="display: none">
                                <label id="lblQr"> Scan QR </label>
                                <img src="~/assets/img/QR.jpeg" height="200" width="200" />
                            </div>
                            <div class="col-md-3" id="divbankname">
                                <label for="BankName" id="lblbank">Bank Name</label>
                                @Html.TextBoxFor(m => m.BankName, new { @class = "form-control", @placeholder = "Bank Name", })
                            </div>
                            <div class="col-md-3" id="divbankbranch">
                                <label for="BranchName" id="lbltbranch">Branch Name</label>
                                @Html.TextBoxFor(m => m.BankBranch, new { @class = "form-control", @placeholder = "Branch Name" })
                            </div>
                            <div class="col-md-3" id="divtransactiono">
                                <label for="TransactionNo" id="lbltno">Transaction No</label>
                                @Html.TextBoxFor(m => m.TransactionNo, new { @class = "form-control", @placeholder = "TransactionNo", })
                            </div>
                            <div class="col-md-3" id="divtrdate">
                                <label for="TransactionDate" id="lbltdate">TransactionDate</label>
                                @Html.TextBoxFor(m => m.TransactionDate, new { @class = "form-control", @placeholder = "Transaction Date" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <input class="btn btn-success" name="btn_Pin" id="btn_Pin" type="submit" value="Submit" onclick="return ValidateForm();" />
                        </div>
                        @*<div class="row mb-4">
                            <div class="col-md-12">
                                <span style="color:red">From Amount : @ViewBag.FromAmount </span><span style="color:red;padding-left:50px"> To Amount : @ViewBag.ToAmount </span><span style="color:red;padding-left:50px"> In Multiple Of : @ViewBag.InMultipleOf</span>
                            </div>
                        </div>*@

                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" type="text/javascript"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>
<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="Stylesheet" type="text/css" />
<script>
    $(document).ready(function () {
        $("#PaymentType").val('Online');
    });
    $('#TransactionDate').datepicker({
        dateFormat: 'dd/mm/yy',
    });

    //$(function () {
    //    var $j = jQuery.noConflict();
    //    $("#TopUpDate").datepicker({
    //        dateFormat: 'dd/mm/yy',
    //    });
    //    $("#TransactionDate").datepicker({
    //        dateFormat: 'dd/mm/yy',
    //    });
    //});
    function getpaymentTypedetails() {
        debugger;
        if ($('#PaymentType').val() == 'Offline') {
            $("#paymentmode").show();
        }
        else if ($('#PaymentType').val() == 'Online') {
            $("#paymentmode").hide();
            $("#divPaymentMode").hide();
            $("#BankName").val('');
            $("#BankBranch").val('');
            $("#TransactionNo").val('');
            $("#TransactionDate").val('');
        }
    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
    function CheckAmount() {
        debugger;
        var Amount = $("#Amount").val();
        var WalletBalance = $("#WalletAmount").val();
        if (Amount != null && Amount != "" && Amount != "0") {
            if (parseInt(Amount) % 1000 == 0) {
                if (parseInt(Amount) > parseInt(WalletBalance)) {
                    Snackbar.show({
                        text: "Insufficient Amount",
                        actionTextColor: '#fff',
                        backgroundColor: '#e7515a',
                        pos: 'top-right'
                    });
                    $("#Amount").addClass('errortext');
                    $('#Amount').focus();
                    $("#Amount").val('');
                    return false;
                }
            }
            else {
                Snackbar.show({
                    text: "Invalid Amount",
                    actionTextColor: '#fff',
                    backgroundColor: '#e7515a',
                    pos: 'top-right'
                });
                $("#Amount").addClass('errortext');
                $('#Amount').focus();
                $("#Amount").val('');
                return false;
            }
        }
        return true;
    }
    function ValidateForm() {
        $(".errortext").removeClass("errortext");
        if ($('#PackageId').val() == '0') {
            $("#PackageId").addClass('errortext');
            $('#PackageId').focus();
            return false;
        }
        //if ($('#Amount').val() == '') {
        //    $("#Amount").addClass('errortext');
        //    $('#Amount').focus();
        //    return false;
        //}
        if ($('#PackageId').val() == '0') {
            $("#PackageId").addClass('errortext');
            $('#PackageId').focus();
            return false;
        }
        if ($('#PaymentType').val() == '') {
            $("#PaymentType").addClass('errortext');
            $('#PaymentType').focus();
            return false;
        }
        if ($('#PaymentMode').val() == '') {
            $("#PaymentMode").addClass('errortext');
            $('#PaymentMode').focus();
            return false;
        }
        if (($("#PaymentMode option:selected").text()) != 'Cash' && ($("#PaymentMode option:selected").text()) != "UPI") {
            if ($('#BankName').val() == '') {
                $("#BankName").addClass('errortext');
                $('#BankName').focus();
                return false;
            }
            if ($('#TransactionNo').val() == '') {
                $("#TransactionNo").addClass('errortext');
                $('#TransactionNo').focus();
                return false;
            }
            if ($('#TransactionDate').val() == '') {
                $("#TransactionDate").addClass('errortext');
                $('#TransactionDate').focus();
                return false;
            }
            if ($('#BankBranch').val() == '') {
                $("#BankBranch").addClass('errortext');
                $('#BankBranch').focus();
                return false;
            }
        }
        else if ($("#PaymentMode option:selected").text() == "UPI") {
            if ($('#BankName').val() == '') {
                $("#BankName").addClass('errortext');
                $('#BankName').focus();
                return false;
            }
            if ($('#TransactionNo').val() == '') {
                $("#TransactionNo").addClass('errortext');
                $('#TransactionNo').focus();
                return false;
            }
            if ($('#TransactionDate').val() == '') {
                $("#TransactionDate").addClass('errortext');
                $('#TransactionDate').focus();
                return false;
            }
        }
        else {

        }
        return true;
    }
    function CheckPayMode() {
        debugger;
        if ($('#PaymentMode').val() != '1' && $('#PaymentMode').val() != "10") {
            $('#lbltno').html('Transaction No.');
            $('#lbltdate').html('Transaction Date');
            $('#lblbank').html('Bank Name');
            $("#divtrdate").show();
            $("#divPaymentMode").show();
            $("#divtransactiono").show();
            $("#divbankname").show();
            $("#divbankbranch").show();
            $("#divQr").hide();
            $("#BankName").attr("placeholder", "Bank Name");
            $("#TransactionNo").attr("placeholder", "Transaction No.");
            $("#TransactionDate").attr("placeholder", "Transaction Date");
        }
        else if ($('#PaymentMode').val() == "10") {
            $('#lbltno').html('Transaction Id');
            $('#lbltdate').html('Transaction Date');
            $('#lblbank').html('UPI Id');
            $("#BankName").val('');
            $("#BankBranch").val('');
            $("#divtrdate").show();
            $("#divPaymentMode").show();
            $("#divtransactiono").show();
            $("#divbankname").show();
            $("#divQr").show();
            $("#divbankbranch").hide();
            $("#BankName").attr("placeholder", "UPI Id");
            $("#TransactionNo").attr("placeholder", "Transaction Id");
            $("#TransactionDate").attr("placeholder", "Transaction Date");
        }
        else {
            $("#divPaymentMode").hide();
            $("#divtransactiono").hide();
            $("#divbankname").hide();
            $("#divbankbranch").hide();
            $("#divtrdate").hide();
            $("#divQr").hide();
        }

    }
</script>

@if (TempData["msg"] != null)
{
    <script>
        $(document).ready(function () {
            Snackbar.show({
                text: '@TempData["msg"]',
                actionTextColor: '#fff',
                backgroundColor: '#1abc9c',
                pos: 'top-right'
            });
        });
    </script>
}
@if (TempData["error"] != null)
{
    <script>
        $(document).ready(function () {
            Snackbar.show({
                text: '@TempData["error"]',
                actionTextColor: '#fff',
                backgroundColor: '#e7515a',
                pos: 'top-right'
            });
        });
    </script>
}